
@model IEnumerable<TodoDTO>

@{
    ViewData["Title"] = "Todo list";

}

<h1>View</h1>
<div class="d-flex align-items-center justify-content-between mb-3">
    <a asp-action="CreateTodoView" class="btn btn-primary me-3">Create New</a>

    @*status filter*@
    <form method="get" asp-action="GetTodoList" class="d-flex align-items-center" style="gap: 0.5rem;">
        <label for="statusFilter" class="me-2 mb-0">Filter by Status:</label>
        <select name="status" class="form-select form-select-sm" onchange="this.form.submit()">
            <option value="">-- All --</option>
            @foreach (var status in (List<SelectListItem>)ViewBag.TodoStatuses)
            {
                if (@ViewBag.StatusFilter != null && @ViewBag.StatusFilter.ToString() == status.Value)
                {
                    <option value="@status.Value" selected>@status.Text</option>

                }
                else
                {
                    <option value="@status.Value">@status.Text</option>

                }

            }
        </select>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="GetTodoList" class="text-decoration-none text-dark" asp-route-orderBy="@nameof(TodoDTO.Title)">@Html.DisplayNameFor(model => model.Title)</a>
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                <a asp-action="GetTodoList" class="text-decoration-none text-dark" asp-route-orderBy="@nameof(TodoDTO.DueDate)">@Html.DisplayNameFor(model => model.DueDate)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastModifiedDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastModifiedDate)
            </td>
            <td>
                <a asp-action="UpdateTodoView" asp-route-todoId ="@item.Id" class="btn btn-primary me-3">Edit</a>
                    <a asp-action="GetTodoDetails" asp-route-todoId="@item.Id" class="btn btn-primary me-3">Details</a>
                <a asp-action="DeleteTodo" asp-route-todoId="@item.Id"
                   onclick="return confirm('Are you sure you want to delete this item?');"
                   class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

    @*pagination*@
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

        <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link"
               asp-action="GetTodoList"
                   asp-route-page="@(ViewBag.CurrentPage - 1)"
                   asp-route-status="@Context.Request.Query["status"]"
                   asp-route-orderBy="@Context.Request.Query["orderBy"]">
                    Previous
                </a>
            </li>

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link"
                       asp-action="GetTodoList"
                       asp-route-page="@i"
                       asp-route-status="@Context.Request.Query["status"]"
                       asp-route-orderBy="@Context.Request.Query["orderBy"]">
                        @i
                    </a>
                </li>
            }

        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
            <a class="page-link"
                   asp-action="GetTodoList"
                   asp-route-page="@(ViewBag.CurrentPage + 1)"
                   asp-route-status="@Context.Request.Query["status"]"
                   asp-route-orderBy="@Context.Request.Query["orderBy"]">
                    Next
                </a>
            </li>

        </ul>
    </nav>


